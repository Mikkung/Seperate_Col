import streamlit as st
import pandas as pd
from io import BytesIO

st.set_page_config(page_title="‡πÅ‡∏¢‡∏Å‡∏ä‡∏µ‡∏ï‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô", page_icon="üìò")

st.title("üìò ‡πÅ‡∏¢‡∏Å‡∏ä‡∏µ‡∏ï‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel ‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô (‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏ó‡πâ‡∏≤‡∏¢‡∏ï‡∏≤‡∏£‡∏≤‡∏á)")

uploaded_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel (.xlsx)", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)

    # ‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô"
    found_teacher_col = None
    for col in df.columns:
        if "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå" in str(col):
            found_teacher_col = col
            break

    if not found_teacher_col:
        st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠ '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô'")
    else:
        st.success(f"‚úÖ ‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô: '{found_teacher_col}'")

        if st.button("üöÄ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏¢‡∏Å‡∏ä‡∏µ‡∏ï‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏ó‡πâ‡∏≤‡∏¢‡∏ï‡∏≤‡∏£‡∏≤‡∏á"):
            output = BytesIO()

            with pd.ExcelWriter(output, engine='openpyxl') as writer:
                for teacher, group in df.groupby(found_teacher_col):
                    group = group.copy()

                    # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ó '‡∏•‡∏≥‡∏î‡∏±‡∏ö' ‡πÉ‡∏´‡∏°‡πà
                    first_col = df.columns[0]
                    group[first_col] = range(1, len(group) + 1)

                    # ‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏¥‡∏™‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡πÇ‡∏î‡∏¢‡∏Ñ‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠)
                    student_col = next((c for c in df.columns if "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï" in str(c)), None)
                    money_col = next((c for c in df.columns if "‡πÄ‡∏á‡∏¥‡∏ô" in str(c)), None)

                    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°
                    total_students = group[student_col].sum() if student_col else ""
                    total_money = group[money_col].sum() if money_col else ""

                    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡∏™‡∏£‡∏∏‡∏õ‡∏ó‡πâ‡∏≤‡∏¢‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                    summary = pd.DataFrame({
                        first_col: ["‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"],
                        student_col: [total_students],
                        money_col: [total_money]
                    })

                    # ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
                    for col in group.columns:
                        if col not in summary.columns:
                            summary[col] = ""

                    # ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
                    summary = summary[group.columns]

                    # ‡∏£‡∏ß‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å + ‡∏™‡∏£‡∏∏‡∏õ
                    final_df = pd.concat([group, summary], ignore_index=True)

                    # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏•‡∏á‡∏ä‡∏µ‡∏ï
                    safe_name = str(teacher).strip()[:31].replace('/', '-')
                    final_df.to_excel(writer, sheet_name=safe_name, index=False)

            output.seek(0)

            st.download_button(
                label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡πÅ‡∏•‡πâ‡∏ß (‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∏‡∏õ)",
                data=output,
                file_name="‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå_‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∏‡∏õ.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )
